package Leetcode.ProgrammingSkills.Basic.str_FindTheDifference;

/**
 * 389. Find the Difference
 * --
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 * --
 * Constraints:
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lowercase English letters.
 */
public class FindDifference {

    // Intuition
    // Since the input only contains lowercase English letters (26 total).
    // It can be solved by using an array to count the occurrences of each letter.
    // In the end, return the letter whose count is 1.

    public char findTheDifference(String s, String t) {
//        if (t.length()-1 > s.length() || s.length() == t.length()) return ' ';    // not necessary due constraint guarantees valid length
        int[] letters = new int[26];

        for(int i=0;i<s.length();i++){
            letters[s.charAt(i)-'a']++;
            letters[t.charAt(i)-'a']--;
        }
        letters[t.charAt(t.length()-1)-'a']--;

        for(int i=0;i<letters.length;i++){
            if(letters[i] != 0) {
                return (char)(i+'a');
            };
        }
        return ' ';

    }

    public static void main(String[] args) {
        FindDifference f = new FindDifference();

        String s1 = "abc";
        String s2 = "abcd";
        System.out.println(f.findTheDifference(s1, s2));


        s1 = "";
        s2 = "y";
        System.out.println(f.findTheDifference(s1,s2));

    }
}
